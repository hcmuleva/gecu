import { type MetaQuery } from "@refinedev/core";
interface ILoginResponse {
    jwt: string;
    user: IUser;
}
interface IRole {
    id: number | string;
    name: string;
    description: string;
    type: string;
}
interface IUser {
    id: number | string;
    username: string;
    email: string;
    provider: string;
    confirmed: boolean;
    blocked: boolean;
    role: IRole;
    created_at: string;
    updated_at: string;
}
export type MeOptions = {
    meta?: MetaQuery;
    /**
     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.
     */
    metaData?: MetaQuery;
};
export declare const AuthHelper: (apiUrl: string) => {
    login: (identifier: string, password: string) => Promise<import("axios").AxiosResponse<ILoginResponse, any>>;
    me: (token: string, options?: MeOptions) => Promise<import("axios").AxiosResponse<IUser, any>>;
};
export {};
//# sourceMappingURL=auth.d.ts.map