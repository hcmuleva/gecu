{"version":3,"sources":["../src/index.ts","../src/dataProvider.ts","../src/utils/mapOperator.ts","../src/utils/generateFilter.ts","../src/utils/generateSort.ts","../src/utils/axios.ts","../src/utils/normalizeData.ts","../src/utils/transformErrorMessages.ts","../src/utils/transformHttpError.ts","../src/helpers/auth.ts","../src/helpers/normalize.ts"],"sourcesContent":["export * from \"./dataProvider.js\";\nexport * from \"./helpers/index.js\";\nexport * from \"./utils/index.js\";\n","import type { DataProvider as IDataProvider, HttpError } from \"@refinedev/core\";\nimport type { AxiosInstance } from \"axios\";\nimport qs from \"qs\";\nimport {\n  axiosInstance,\n  generateFilter,\n  generateSort,\n  normalizeData,\n  transformHttpError,\n} from \"./utils\";\n\nexport const DataProvider = (\n  apiUrl: string,\n  httpClient: AxiosInstance = axiosInstance,\n): Required<IDataProvider> => ({\n  getList: async ({ resource, pagination, filters, sorters, meta }) => {\n    const url = `${apiUrl}/${resource}`;\n\n    const { current = 1, pageSize = 10, mode = \"server\" } = pagination ?? {};\n\n    const locale = meta?.locale;\n    const fields = meta?.fields;\n    const populate = meta?.populate;\n    const publicationState = meta?.publicationState;\n\n    const querySorters = generateSort(sorters);\n    const queryFilters = generateFilter(filters);\n\n    const query = {\n      ...(mode === \"server\"\n        ? {\n            \"pagination[page]\": current,\n            \"pagination[pageSize]\": pageSize,\n          }\n        : {}),\n      locale,\n      publicationState,\n      fields,\n      populate,\n      sort: querySorters.length > 0 ? querySorters.join(\",\") : undefined,\n    };\n\n    const { data } = await httpClient.get(\n      `${url}?${qs.stringify(query, {\n        encodeValuesOnly: true,\n      })}&${queryFilters}`,\n    );\n\n    return {\n      data: normalizeData(data),\n      // added to support pagination on client side when using endpoints that provide only data (see https://github.com/refinedev/refine/issues/2028)\n      total: data.meta?.pagination?.total || normalizeData(data)?.length,\n    };\n  },\n\n  getMany: async ({ resource, ids, meta }) => {\n    const url = `${apiUrl}/${resource}`;\n\n    const locale = meta?.locale;\n    const fields = meta?.fields;\n    const populate = meta?.populate;\n    const publicationState = meta?.publicationState;\n\n    const queryFilters = generateFilter([\n      {\n        field: \"id\",\n        operator: \"in\",\n        value: ids,\n      },\n    ]);\n\n    const query = {\n      locale,\n      fields,\n      populate,\n      publicationState,\n      \"pagination[pageSize]\": ids.length,\n    };\n\n    const { data } = await httpClient.get(\n      `${url}?${qs.stringify(query, {\n        encodeValuesOnly: true,\n      })}&${queryFilters}`,\n    );\n\n    return {\n      data: normalizeData(data),\n    };\n  },\n\n  create: async ({ resource, variables }) => {\n    const url = `${apiUrl}/${resource}`;\n\n    let dataVariables: any = { data: variables };\n\n    if (resource === \"users\") {\n      dataVariables = variables;\n    }\n\n    try {\n      const { data } = await httpClient.post(url, dataVariables);\n      return {\n        data,\n      };\n    } catch (error) {\n      const httpError = transformHttpError(error);\n\n      throw httpError;\n    }\n  },\n\n  update: async ({ resource, id, variables }) => {\n    const url = `${apiUrl}/${resource}/${id}`;\n\n    let dataVariables: any = { data: variables };\n\n    if (resource === \"users\") {\n      dataVariables = variables;\n    }\n\n    try {\n      const { data } = await httpClient.put(url, dataVariables);\n      return {\n        data,\n      };\n    } catch (error) {\n      const httpError = transformHttpError(error);\n\n      throw httpError;\n    }\n  },\n\n  updateMany: async ({ resource, ids, variables }) => {\n    const errors: HttpError[] = [];\n\n    const response = await Promise.all(\n      ids.map(async (id) => {\n        const url = `${apiUrl}/${resource}/${id}`;\n\n        let dataVariables: any = { data: variables };\n\n        if (resource === \"users\") {\n          dataVariables = variables;\n        }\n\n        try {\n          const { data } = await httpClient.put(url, dataVariables);\n          return data;\n        } catch (error) {\n          const httpError = transformHttpError(error);\n\n          errors.push(httpError);\n        }\n      }),\n    );\n\n    if (errors.length > 0) {\n      throw errors;\n    }\n\n    return { data: response };\n  },\n\n  createMany: async ({ resource, variables }) => {\n    const errors: HttpError[] = [];\n\n    const response = await Promise.all(\n      variables.map(async (param) => {\n        try {\n          const { data } = await httpClient.post(`${apiUrl}/${resource}`, {\n            data: param,\n          });\n          return data;\n        } catch (error) {\n          const httpError = transformHttpError(error);\n\n          errors.push(httpError);\n        }\n      }),\n    );\n\n    if (errors.length > 0) {\n      throw errors;\n    }\n\n    return { data: response };\n  },\n\n  getOne: async ({ resource, id, meta }) => {\n    const locale = meta?.locale;\n    const fields = meta?.fields;\n    const populate = meta?.populate;\n    const publicationState = meta?.publicationState;\n\n    const query = {\n      locale,\n      fields,\n      populate,\n      publicationState,\n    };\n\n    const url = `${apiUrl}/${resource}/${id}?${qs.stringify(query, {\n      encode: false,\n    })}`;\n\n    const { data } = await httpClient.get(url);\n\n    return {\n      data: normalizeData(data),\n    };\n  },\n\n  deleteOne: async ({ resource, id }) => {\n    const url = `${apiUrl}/${resource}/${id}`;\n\n    const { data } = await httpClient.delete(url);\n\n    return {\n      data,\n    };\n  },\n\n  deleteMany: async ({ resource, ids }) => {\n    const response = await Promise.all(\n      ids.map(async (id) => {\n        const { data } = await httpClient.delete(`${apiUrl}/${resource}/${id}`);\n        return data;\n      }),\n    );\n    return { data: response };\n  },\n\n  getApiUrl: () => {\n    return apiUrl;\n  },\n\n  custom: async ({\n    url,\n    method,\n    filters,\n    sorters,\n    payload,\n    query,\n    headers,\n  }) => {\n    let requestUrl = `${url}?`;\n\n    if (sorters) {\n      const sortQuery = generateSort(sorters);\n      if (sortQuery.length > 0) {\n        requestUrl = `${requestUrl}&${qs.stringify({\n          sort: sortQuery.join(\",\"),\n        })}`;\n      }\n    }\n\n    if (filters) {\n      const filterQuery = generateFilter(filters);\n      requestUrl = `${requestUrl}&${filterQuery}`;\n    }\n\n    if (query) {\n      requestUrl = `${requestUrl}&${qs.stringify(query)}`;\n    }\n\n    let axiosResponse;\n    switch (method) {\n      case \"put\":\n      case \"post\":\n      case \"patch\":\n        axiosResponse = await httpClient[method](url, payload, {\n          headers,\n        });\n        break;\n      case \"delete\":\n        axiosResponse = await httpClient.delete(url, {\n          data: payload,\n          headers: headers,\n        });\n        break;\n      default:\n        axiosResponse = await httpClient.get(requestUrl, { headers });\n        break;\n    }\n\n    const { data } = axiosResponse;\n\n    return Promise.resolve({ data });\n  },\n});\n","import type { CrudOperators } from \"@refinedev/core\";\n\nexport const mapOperator = (operator: CrudOperators) => {\n  switch (operator) {\n    case \"startswith\":\n      return \"startsWith\";\n    case \"endswith\":\n      return \"endsWith\";\n    case \"nin\":\n      return \"notIn\";\n    case \"ncontains\":\n      return \"notContainsi\";\n    case \"ncontainss\":\n      return \"notContains\";\n    case \"containss\":\n      return \"contains\";\n    case \"contains\":\n      return \"containsi\";\n    case \"nnull\":\n      return \"notNull\";\n  }\n\n  return operator;\n};\n","import type {\n  CrudFilters,\n  LogicalFilter,\n  ConditionalFilter,\n} from \"@refinedev/core\";\nimport { mapOperator } from \"./mapOperator\";\nimport qs from \"qs\";\n\nexport const generateNestedFilterField = (field: string) => {\n  const fields = field.split(\".\");\n\n  if (fields.length > 1) {\n    let fieldQuery = \"\";\n\n    fields.forEach((v) => {\n      fieldQuery += `[${v}]`;\n    });\n\n    return fieldQuery;\n  }\n  return `[${fields[0]}]`;\n};\n\nconst generateLogicalFilter = (filter: LogicalFilter, parent = \"\"): string => {\n  const { field, operator, value } = filter;\n\n  let rawQuery = \"\";\n\n  const mappedOperator = mapOperator(operator);\n\n  if (Array.isArray(value)) {\n    value.map((val, index) => {\n      rawQuery += `&filters${parent}${generateNestedFilterField(\n        field,\n      )}[$${mappedOperator}][${index}]=${val}`;\n    });\n  } else {\n    rawQuery += `&filters${parent}${generateNestedFilterField(\n      field,\n    )}[$${mappedOperator}]=${value}`;\n  }\n  return rawQuery;\n};\n\nconst generateConditionalFilter = (\n  filter: ConditionalFilter,\n  parent = \"\",\n): string => {\n  let rawQuery = \"\";\n\n  filter.value.map((item, index) => {\n    if (item.operator !== \"or\" && item.operator !== \"and\" && \"field\" in item) {\n      rawQuery += generateLogicalFilter(\n        item,\n        `${parent}[$${filter.operator}][${index}]`,\n      );\n    } else {\n      rawQuery += generateConditionalFilter(\n        item,\n        `${parent}[$${filter.operator}][${index}]`,\n      );\n    }\n  });\n  return rawQuery;\n};\n\nexport const generateFilter = (filters?: CrudFilters) => {\n  let rawQuery = \"\";\n\n  if (filters) {\n    filters.map((filter) => {\n      if (\n        filter.operator !== \"or\" &&\n        filter.operator !== \"and\" &&\n        \"field\" in filter\n      ) {\n        rawQuery += generateLogicalFilter(filter);\n      } else {\n        rawQuery += generateConditionalFilter(filter);\n      }\n    });\n  }\n\n  const parsedQuery = qs.parse(rawQuery, { depth: 15 });\n\n  const queryFilters = qs.stringify(parsedQuery, { encodeValuesOnly: true });\n\n  return queryFilters;\n};\n","import type { CrudSorting } from \"@refinedev/core\";\n\nexport const generateSort = (sorters?: CrudSorting) => {\n  const _sort: string[] = [];\n\n  if (sorters) {\n    sorters.map((item) => {\n      if (item.order) {\n        _sort.push(`${item.field}:${item.order}`);\n      }\n    });\n  }\n\n  return _sort;\n};\n","import axios from \"axios\";\nimport type { HttpError } from \"@refinedev/core\";\n\nexport const axiosInstance = axios.create();\n\naxiosInstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    const customError: HttpError = {\n      ...error,\n      message: error.response?.data?.message,\n      statusCode: error.response?.status,\n    };\n\n    return Promise.reject(customError);\n  },\n);\n","const flatten = (data: any) => {\n  if (!data.attributes) return data;\n\n  return {\n    id: data.id,\n    ...data.attributes,\n  };\n};\n\nconst isObject = (data: any) =>\n  Object.prototype.toString.call(data) === \"[object Object]\";\n\nexport const normalizeData = (data: any): any => {\n  if (Array.isArray(data)) {\n    return data.map((item) => normalizeData(item));\n  }\n\n  if (isObject(data)) {\n    if (Array.isArray(data.data)) {\n      data = [...data.data];\n    } else if (isObject(data.data)) {\n      data = flatten({ ...data.data });\n    } else if (data.data === null) {\n      data = null;\n    } else {\n      data = flatten(data);\n    }\n\n    for (const key in data) {\n      data[key] = normalizeData(data[key]);\n    }\n\n    return data;\n  }\n\n  return data;\n};\n","type ErrorMessage = {\n  path: string[];\n  message: string;\n  name: string;\n};\n\ntype TransformedErrors = {\n  [key: string]: string[];\n};\n\nexport const transformErrorMessages = (\n  errorMessages: ErrorMessage[],\n): TransformedErrors => {\n  const transformedErrors: TransformedErrors = {};\n\n  for (const error of errorMessages) {\n    const key = error.path[0];\n\n    if (transformedErrors[key]) {\n      transformedErrors[key].push(error.message);\n    } else {\n      transformedErrors[key] = [error.message];\n    }\n  }\n\n  return transformedErrors;\n};\n","import type { HttpError } from \"@refinedev/core\";\nimport { transformErrorMessages } from \"./transformErrorMessages\";\n\nexport const transformHttpError = (err: any): HttpError => {\n  const error = err?.response?.data?.error || {};\n\n  const message = error?.message;\n  const statusCode = error?.status;\n  const errorMessages = error?.details?.errors || [];\n\n  const httpError: HttpError = {\n    statusCode,\n    message,\n    errors: transformErrorMessages(errorMessages),\n  };\n\n  return httpError;\n};\n","import { type MetaQuery, pickNotDeprecated } from \"@refinedev/core\";\nimport axios from \"axios\";\nimport qs from \"qs\";\n\ninterface ILoginResponse {\n  jwt: string;\n  user: IUser;\n}\n\ninterface IRole {\n  id: number | string;\n  name: string;\n  description: string;\n  type: string;\n}\n\ninterface IUser {\n  id: number | string;\n  username: string;\n  email: string;\n  provider: string;\n  confirmed: boolean;\n  blocked: boolean;\n  role: IRole;\n  created_at: string;\n  updated_at: string;\n}\n\nexport type MeOptions = {\n  meta?: MetaQuery;\n  /**\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n};\n\nexport const AuthHelper = (apiUrl: string) => ({\n  login: async (identifier: string, password: string) => {\n    const url = `${apiUrl}/auth/local`;\n\n    return await axios.post<ILoginResponse>(url, {\n      identifier,\n      password,\n    });\n  },\n  me: async (token: string, options?: MeOptions) => {\n    const { metaData, meta: _meta } = options ?? {};\n    const meta = pickNotDeprecated(_meta, metaData);\n    const locale = meta?.locale;\n    const fields = meta?.fields;\n    const populate = meta?.populate;\n\n    const query = {\n      locale,\n      fields,\n      populate,\n    };\n\n    return await axios.get<IUser>(\n      `${apiUrl}/users/me?${qs.stringify(query, {\n        encodeValuesOnly: true,\n      })}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      },\n    );\n  },\n});\n","export const getValueProps = (data: any, imageUrl: string) => {\n  if (!data) {\n    return { fileList: [] };\n  }\n\n  return {\n    file: data.file,\n    fileList:\n      data.fileList ??\n      (Array.isArray(data) ? data : [data]).map((item: any) => {\n        const file: any = {\n          name: item.name,\n          percent: item.percent,\n          size: item.size,\n          status: item.status,\n          type: item.mime || item.type,\n          uid: item.id,\n        };\n\n        if (item.url) {\n          file.url = `${imageUrl}${item.url}`;\n        }\n\n        return file;\n      }),\n  };\n};\n\nexport const mediaUploadMapper = (params: any) => {\n  Object.keys(params).map((item) => {\n    if (params[item]) {\n      const param = params[item].fileList;\n      const isMediaField = Array.isArray(param);\n      if (isMediaField) {\n        const ids = [];\n        for (const item of param) {\n          if (item.response) {\n            for (const response of item.response) {\n              ids.push(response.id);\n            }\n          } else {\n            ids.push(item.uid);\n          }\n        }\n        params[item] = ids;\n      }\n    }\n  });\n  return params;\n};\n"],"mappings":"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","names":["src_exports","__export","AuthHelper","DataProvider","axiosInstance","generateFilter","generateNestedFilterField","generateSort","getValueProps","mapOperator","mediaUploadMapper","normalizeData","transformErrorMessages","transformHttpError","__toCommonJS","import_qs","mapOperator","operator","import_qs","generateNestedFilterField","field","fields","fieldQuery","v","generateLogicalFilter","filter","parent","operator","value","rawQuery","mappedOperator","mapOperator","val","index","generateConditionalFilter","item","generateFilter","filters","parsedQuery","qs","generateSort","sorters","_sort","item","import_axios","axiosInstance","axios","response","error","_a","_b","_c","customError","flatten","data","isObject","normalizeData","item","key","transformErrorMessages","errorMessages","transformedErrors","error","key","transformHttpError","err","_a","_b","_c","error","message","statusCode","errorMessages","transformErrorMessages","DataProvider","apiUrl","httpClient","axiosInstance","resource","pagination","filters","sorters","meta","_a","_b","_c","url","current","pageSize","mode","locale","fields","populate","publicationState","querySorters","generateSort","queryFilters","generateFilter","query","data","qs","normalizeData","ids","variables","dataVariables","error","transformHttpError","id","errors","response","httpError","param","method","payload","headers","requestUrl","sortQuery","filterQuery","axiosResponse","import_core","import_axios","import_qs","AuthHelper","apiUrl","identifier","password","url","axios","token","options","metaData","_meta","meta","locale","fields","populate","query","qs","getValueProps","data","imageUrl","item","file","mediaUploadMapper","params","param","ids","response"]}